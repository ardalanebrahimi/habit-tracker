// filepath: c:\Users\ardal\habit-tracker\src\app\app.component.ts
import {
  Component,
  ChangeDetectorRef,
  OnInit,
} from '@angular/core';
import { Router, RouterModule } from '@angular/router';
import { AuthService } from './services/auth.service';
import { CommonModule } from '@angular/common';
import { Observable } from 'rxjs';
import { LoadingService } from './services/loading.service';
import { ToastComponent } from './features/toast/toast.component';
import { NavbarComponent } from './features/navbar/navbar.component';

@Component({
  selector: 'app-root',
  standalone: true,
  imports: [CommonModule, RouterModule, ToastComponent, NavbarComponent],
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.scss'],
})
export class AppComponent implements OnInit {
  isLoading$: Observable<boolean>;

  constructor(
    public authService: AuthService,
    private router: Router,
    private loadingService: LoadingService,
    private cdr: ChangeDetectorRef
  ) {
    this.isLoading$ = this.loadingService.isLoading.asObservable();
  }

  ngOnInit(): void {
    // Nothing to initialize
  }

  ngAfterViewInit() {
    this.isLoading$.subscribe(() => {
      this.cdr.detectChanges(); // âœ… Force UI update to avoid ExpressionChangedAfterItHasBeenCheckedError
    });
  }

  logout(): void {
    this.authService.logout();
    this.router.navigate(['/login']);
  }
}
